[1mdiff --git a/src/com/seancheey/data/Entity.java b/src/com/seancheey/data/Entity.java[m
[1mindex 8a4773b..31a3a60 100644[m
[1m--- a/src/com/seancheey/data/Entity.java[m
[1m+++ b/src/com/seancheey/data/Entity.java[m
[36m@@ -10,6 +10,7 @@[m [mpublic abstract class Entity implements Serializable {[m
 	private static final long serialVersionUID = 1L;[m
 	protected double width, height, x, y, vx, vy;// the location and velocity[m
 [m
[32m+[m
 	/**[m
 	 * @return the width[m
 	 */[m
[36m@@ -18,8 +19,7 @@[m [mpublic abstract class Entity implements Serializable {[m
 	}[m
 [m
 	/**[m
[31m-	 * @param width[m
[31m-	 *            the width to set[m
[32m+[m	[32m * @param width the width to set[m
 	 */[m
 	public void setWidth(double width) {[m
 		this.width = width;[m
[36m@@ -33,8 +33,7 @@[m [mpublic abstract class Entity implements Serializable {[m
 	}[m
 [m
 	/**[m
[31m-	 * @param height[m
[31m-	 *            the height to set[m
[32m+[m	[32m * @param height the height to set[m
 	 */[m
 	public void setHeight(double height) {[m
 		this.height = height;[m
[36m@@ -48,8 +47,7 @@[m [mpublic abstract class Entity implements Serializable {[m
 	}[m
 [m
 	/**[m
[31m-	 * @param x[m
[31m-	 *            the x to set[m
[32m+[m	[32m * @param x the x to set[m
 	 */[m
 	public void setX(double x) {[m
 		this.x = x;[m
[36m@@ -63,8 +61,7 @@[m [mpublic abstract class Entity implements Serializable {[m
 	}[m
 [m
 	/**[m
[31m-	 * @param y[m
[31m-	 *            the y to set[m
[32m+[m	[32m * @param y the y to set[m
 	 */[m
 	public void setY(double y) {[m
 		this.y = y;[m
[36m@@ -78,8 +75,7 @@[m [mpublic abstract class Entity implements Serializable {[m
 	}[m
 [m
 	/**[m
[31m-	 * @param vx[m
[31m-	 *            the vx to set[m
[32m+[m	[32m * @param vx the vx to set[m
 	 */[m
 	public void setVx(double vx) {[m
 		this.vx = vx;[m
[36m@@ -93,8 +89,7 @@[m [mpublic abstract class Entity implements Serializable {[m
 	}[m
 [m
 	/**[m
[31m-	 * @param vy[m
[31m-	 *            the vy to set[m
[32m+[m	[32m * @param vy the vy to set[m
 	 */[m
 	public void setVy(double vy) {[m
 		this.vy = vy;[m
[1mdiff --git a/src/com/seancheey/data/Fish.java b/src/com/seancheey/data/Fish.java[m
[1mnew file mode 100644[m
[1mindex 0000000..67379c2[m
[1m--- /dev/null[m
[1m+++ b/src/com/seancheey/data/Fish.java[m
[36m@@ -0,0 +1,200 @@[m
[32m+[m[32mpackage com.seancheey.data;[m
[32m+[m
[32m+[m[32mimport java.awt.Graphics;[m
[32m+[m[32mimport java.awt.Graphics2D;[m
[32m+[m[32mimport java.awt.Image;[m
[32m+[m[32mimport java.io.Serializable;[m
[32m+[m
[32m+[m[32mpublic abstract class Fish extends Entity implements Serializable {[m
[32m+[m	[32m/**[m
[32m+[m	[32m *[m[41m [m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static final long serialVersionUID = 2L;[m
[32m+[m	[32mprotected final Pond pond;// the container of fish[m
[32m+[m	[32mprotected transient Image image;// the image of the fish[m
[32m+[m	[32mprotected boolean immobilized = false;// if the fish is fixed[m
[32m+[m	[32mprivate double energyUsed, shearY;[m
[32m+[m	[32mprivate final double matureWidth, matureHeight;[m
[32m+[m
[32m+[m	[32m// constructor[m
[32m+[m	[32mpublic Fish(double width, double height, double x, double y, double vx,[m
[32m+[m			[32mdouble vy, Pond pond, Image image, double matureWidth,[m
[32m+[m			[32mdouble matureHeight) {[m
[32m+[m		[32msuper();[m
[32m+[m		[32mthis.width = width;[m
[32m+[m		[32mthis.height = height;[m
[32m+[m		[32mthis.x = x;[m
[32m+[m		[32mthis.y = y;[m
[32m+[m		[32mthis.vx = vx;[m
[32m+[m		[32mthis.vy = vy;[m
[32m+[m		[32mthis.pond = pond;[m
[32m+[m		[32mthis.image = image;[m
[32m+[m		[32mthis.matureWidth = matureHeight;[m
[32m+[m		[32mthis.matureHeight = matureHeight;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic Fish(double width, double height, double x, double y, double vx,[m
[32m+[m			[32mdouble vy, Pond pond, Image image) {[m
[32m+[m		[32msuper();[m
[32m+[m		[32mthis.width = width;[m
[32m+[m		[32mthis.height = height;[m
[32m+[m		[32mthis.x = x;[m
[32m+[m		[32mthis.y = y;[m
[32m+[m		[32mthis.vx = vx;[m
[32m+[m		[32mthis.vy = vy;[m
[32m+[m		[32mthis.pond = pond;[m
[32m+[m		[32mthis.image = image;[m
[32m+[m		[32mthis.matureWidth = 150;[m
[32m+[m		[32mthis.matureHeight = 75;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void setFixed(boolean value) {[m
[32m+[m		[32mimmobilized = value;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic String toString() {[m
[32m+[m		[32mreturn "Fish [width=" + width + ", height=" + height + ", x=" + x[m
[32m+[m				[32m+ ", y=" + y + ", vx=" + vx + ", vy=" + vy + "]";[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m// List of getter[m
[32m+[m
[32m+[m	[32mpublic Pond getPond() {[m
[32m+[m		[32mreturn pond;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m// ***Main Algorithm is here!!!***[m
[32m+[m	[32mprotected void perform() {[m
[32m+[m		[32m// grow a bit or die if mature[m
[32m+[m		[32mif (width < matureWidth)[m
[32m+[m			[32mwidth += Math.random() / 10;[m
[32m+[m		[32melse if (Math.random() < 0.01)[m
[32m+[m			[32mgetPond().remove(this);[m
[32m+[m		[32mif (height < matureHeight)[m
[32m+[m			[32mheight += Math.random() / 20;[m
[32m+[m		[32melse if (Math.random() < 0.01)[m
[32m+[m			[32mgetPond().remove(this);[m
[32m+[m		[32m// to prevent the ball from sticking into wall[m
[32m+[m		[32mif (x > getPond().getWidth()) {[m
[32m+[m			[32mx = getPond().getWidth() - width;[m
[32m+[m			[32mvx = -vx;[m
[32m+[m		[32m}[m
[32m+[m		[32mif (y > getPond().getHeight()) {[m
[32m+[m			[32my = getPond().getHeight() - height;[m
[32m+[m			[32mvy = -vy;[m
[32m+[m		[32m}[m
[32m+[m		[32mif (x < 0) {[m
[32m+[m			[32mx = width;[m
[32m+[m			[32mvx = -vx;[m
[32m+[m		[32m}[m
[32m+[m		[32mif (y < 0) {[m
[32m+[m			[32my = height;[m
[32m+[m			[32mvy = -vy;[m
[32m+[m		[32m}[m
[32m+[m		[32m// have a move[m
[32m+[m		[32mif (!immobilized) {[m
[32m+[m			[32mx += vx;[m
[32m+[m			[32my += vy;[m
[32m+[m		[32m}[m
[32m+[m		[32m// calculate the energy use[m
[32m+[m		[32menergyUsed += getVelocity() / 15;[m
[32m+[m		[32m// calculate the shear[m
[32m+[m		[32mshearY = Math.sin(energyUsed) * 0.25;[m
[32m+[m
[32m+[m		[32m// propagate in a small probability[m
[32m+[m		[32mif (width > matureWidth * 0.75 && height > matureHeight * 0.75)[m
[32m+[m			[32mfor (Fish f : pond.getFishes()) {[m
[32m+[m				[32mif (isCollidedBy(f)) {[m
[32m+[m					[32mif (Math.random() < 0.001)[m
[32m+[m						[32mpropagate();[m
[32m+[m					[32mbreak;[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void trackOnce(Fish fish) {[m
[32m+[m		[32m// use mean angle[m
[32m+[m		[32mdouble diffx = fish.getX() - x, diffy = fish.getY() - y;[m
[32m+[m		[32mdouble vangle = Math.atan2(vy, vx), aimangle = Math.atan2(diffy, diffx);[m
[32m+[m		[32mif (Math.abs(vangle - aimangle) > Math.PI) {[m
[32m+[m			[32mvangle = (vangle + aimangle) / 2 + Math.PI;[m
[32m+[m		[32m} else {[m
[32m+[m			[32mvangle = (vangle + aimangle) / 2;[m
[32m+[m		[32m}[m
[32m+[m		[32m// use mean velocity if not fixed[m
[32m+[m		[32mdouble v = getVelocity();[m
[32m+[m		[32mif (immobilized == false) {[m
[32m+[m			[32mdouble diffv = fish.getVelocity();[m
[32m+[m			[32mv = (v + diffv) / 2;[m
[32m+[m			[32m// set vx and vy[m
[32m+[m			[32mvx = Math.cos(vangle) * v;[m
[32m+[m			[32mvy = Math.sin(vangle) * v;[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void trackOnce(double px, double py) {[m
[32m+[m		[32m// use mean angle[m
[32m+[m		[32mdouble diffx = px - x, diffy = py - y;[m
[32m+[m		[32mdouble vangle = Math.atan2(vy, vx), aimangle = Math.atan2(diffy, diffx);[m
[32m+[m		[32mdouble diffangle = Math.abs(vangle - aimangle);[m
[32m+[m		[32mif (diffangle > Math.PI) {[m
[32m+[m			[32mvangle = (vangle + aimangle) / 2 + Math.PI;[m
[32m+[m		[32m} else {[m
[32m+[m			[32mvangle = (vangle + aimangle) / 2;[m
[32m+[m		[32m}[m
[32m+[m		[32m// set vx and vy[m
[32m+[m		[32mvx = Math.cos(vangle) * getVelocity();[m
[32m+[m		[32mvy = Math.sin(vangle) * getVelocity();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic boolean isCollidedBy(Fish fish) {[m
[32m+[m		[32mif ((Math.abs(fish.getXCenter() - getXCenter()) <= (fish.getWidth() + width) / 2.0)[m
[32m+[m				[32m&& (Math.abs(fish.getYCenter() - getYCenter()) <= (fish[m
[32m+[m						[32m.getHeight() + height) / 2.0)) {[m
[32m+[m			[32mreturn true;[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn false;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void propagate() {[m
[32m+[m		[32mFish fish = clone();[m
[32m+[m		[32mfish.setWidth(20);[m
[32m+[m		[32mfish.setHeight(10);[m
[32m+[m		[32mfish.setVx(FishGenerator.randV(5));[m
[32m+[m		[32mfish.setVy(FishGenerator.randV(5));[m
[32m+[m		[32mpond.add(fish);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void paint(Graphics g) {[m
[32m+[m		[32mint xcenter = (int) getXCenter();[m
[32m+[m		[32mint ycenter = (int) getYCenter();[m
[32m+[m		[32mg.translate(xcenter, ycenter);[m
[32m+[m		[32mGraphics2D g2 = (Graphics2D) g;[m
[32m+[m		[32mdouble angle = Math.atan2(vy, vx);[m
[32m+[m		[32mg2.shear(0, shearY);[m
[32m+[m		[32mg2.rotate(angle);[m
[32m+[m		[32mdrawShape(g);[m
[32m+[m		[32mg2.rotate(-angle);[m
[32m+[m		[32mg2.shear(0, -shearY);[m
[32m+[m		[32mg.translate(-xcenter, -ycenter);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mprotected void drawShape(Graphics g) {[m
[32m+[m		[32mif (image == null)[m
[32m+[m			[32mimage = fetchLostImage();[m
[32m+[m		[32mg.drawImage(image, (int) (-width / 2), (int) (-height / 2),[m
[32m+[m				[32m(int) (width), (int) (height), null);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mprotected abstract Image fetchLostImage();[m
[32m+[m
[32m+[m	[32m/*[m
[32m+[m	[32m * (non-Javadoc)[m
[32m+[m	[32m *[m[41m [m
[32m+[m	[32m * @see java.lang.Object#clone()[m
[32m+[m	[32m */[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected abstract Fish clone();[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/src/com/seancheey/data/FishGenerator.java b/src/com/seancheey/data/FishGenerator.java[m
[1mindex 14ad548..4975307 100644[m
[1m--- a/src/com/seancheey/data/FishGenerator.java[m
[1m+++ b/src/com/seancheey/data/FishGenerator.java[m
[36m@@ -3,18 +3,17 @@[m [mpackage com.seancheey.data;[m
 import java.io.Serializable;[m
 [m
 import com.seancheey.Main;[m
[31m-import com.seancheey.data.entity.Fish;[m
[31m-import com.seancheey.data.entity.fish.MaoFish;[m
[31m-import com.seancheey.data.entity.fish.RainbowFish;[m
[31m-import com.seancheey.data.entity.fish.RectFish;[m
[31m-import com.seancheey.data.entity.fish.RoundFish;[m
[32m+[m[32mimport com.seancheey.data.fish.MaoFish;[m
[32m+[m[32mimport com.seancheey.data.fish.RainbowFish;[m
[32m+[m[32mimport com.seancheey.data.fish.RectFish;[m
[32m+[m[32mimport com.seancheey.data.fish.RoundFish;[m
 [m
 public class FishGenerator implements Serializable {[m
 	/**[m
 	 * [m
 	 */[m
 	private static final long serialVersionUID = 1L;[m
[31m-	public static final int DEFAULT_WIDTH = 120, DEFAULT_HEIGHT = 60;[m
[32m+[m	[32mprivate static final int DEFAULT_WIDTH = 120, DEFAULT_HEIGHT = 60;[m
 	private Pond pond;[m
 [m
 	public FishGenerator(Pond pond) {[m
[1mdiff --git a/src/com/seancheey/data/LocationComponent.java b/src/com/seancheey/data/LocationComponent.java[m
[1mnew file mode 100644[m
[1mindex 0000000..08622c8[m
[1m--- /dev/null[m
[1m+++ b/src/com/seancheey/data/LocationComponent.java[m
[36m@@ -0,0 +1,53 @@[m
[32m+[m[32mpackage com.seancheey.data;[m
[32m+[m
[32m+[m[32mimport java.awt.Color;[m
[32m+[m[32mimport java.awt.Dimension;[m
[32m+[m[32mimport java.awt.Graphics;[m
[32m+[m[32mimport java.awt.Image;[m
[32m+[m[32mimport java.awt.event.ActionEvent;[m
[32m+[m[32mimport java.awt.event.ActionListener;[m
[32m+[m
[32m+[m[32mimport javax.swing.JButton;[m
[32m+[m[32mimport javax.swing.JComponent;[m
[32m+[m
[32m+[m[32mpublic class LocationComponent extends JComponent implements ActionListener {[m
[32m+[m	[32m/**[m
[32m+[m	[32m *[m[41m [m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static final long serialVersionUID = 1L;[m
[32m+[m	[32mprivate transient Image image;[m
[32m+[m	[32mprivate int imageWidth, imageHeight;[m
[32m+[m	[32mprivate String name;[m
[32m+[m
[32m+[m	[32mpublic LocationComponent(Image image, int imageWidth, int imageHeight,[m
[32m+[m			[32mString name) {[m
[32m+[m		[32msuper();[m
[32m+[m		[32mthis.image = image;[m
[32m+[m		[32mthis.imageWidth = imageWidth;[m
[32m+[m		[32mthis.imageHeight = imageHeight;[m
[32m+[m		[32mthis.name = name;[m
[32m+[m		[32mJButton reactionButton = new JButton(" ");[m
[32m+[m		[32mreactionButton.setBorderPainted(false);[m
[32m+[m		[32mreactionButton.setRequestFocusEnabled(false);[m
[32m+[m		[32mreactionButton.setBackground(new Color(0, 0, 0, 0));[m
[32m+[m		[32mreactionButton.addActionListener(this);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected void paintComponent(Graphics g) {[m
[32m+[m		[32msuper.paintComponent(g);[m
[32m+[m		[32mg.drawImage(image, 0, 0, imageWidth, imageHeight, this);[m
[32m+[m		[32mg.drawString(name, 0, 0);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic Dimension getPreferredSize() {[m
[32m+[m		[32mreturn new Dimension(imageWidth, imageHeight);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic void actionPerformed(ActionEvent arg0) {[m
[32m+[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/src/com/seancheey/data/Map.java b/src/com/seancheey/data/Map.java[m
[1mnew file mode 100644[m
[1mindex 0000000..b96ae05[m
[1m--- /dev/null[m
[1m+++ b/src/com/seancheey/data/Map.java[m
[36m@@ -0,0 +1,43 @@[m
[32m+[m[32mpackage com.seancheey.data;[m
[32m+[m
[32m+[m[32mimport java.awt.Dimension;[m
[32m+[m[32mimport java.awt.Graphics;[m
[32m+[m[32mimport java.awt.Image;[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m
[32m+[m[32mimport javax.swing.JComponent;[m
[32m+[m
[32m+[m[32mpublic class Map extends JComponent {[m
[32m+[m	[32m/**[m
[32m+[m	[32m *[m[41m [m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static final long serialVersionUID = 1L;[m
[32m+[m	[32mprivate transient Image background;[m
[32m+[m	[32mprivate ArrayList<LocationComponent> locations = new ArrayList<LocationComponent>();[m
[32m+[m
[32m+[m	[32mpublic Map(Image background, ArrayList<LocationComponent> locations) {[m
[32m+[m		[32msuper();[m
[32m+[m		[32mthis.background = background;[m
[32m+[m		[32mthis.locations = locations;[m
[32m+[m		[32mfor (LocationComponent location : locations) {[m
[32m+[m			[32madd(location);[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/*[m
[32m+[m	[32m * (non-Javadoc)[m
[32m+[m	[32m *[m[41m [m
[32m+[m	[32m * @see javax.swing.JComponent#printComponent(java.awt.Graphics)[m
[32m+[m	[32m */[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected void paintComponent(Graphics g) {[m
[32m+[m		[32msuper.paintComponent(g);[m
[32m+[m		[32mg.drawImage(background, 0, 0, null);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic Dimension getPreferredSize() {[m
[32m+[m		[32mreturn new Dimension(background.getWidth(null),[m
[32m+[m				[32mbackground.getHeight(null));[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[1mdiff --git a/src/com/seancheey/data/Pond.java b/src/com/seancheey/data/Pond.java[m
[1mindex 6fadcad..1a9c9c6 100644[m
[1m--- a/src/com/seancheey/data/Pond.java[m
[1m+++ b/src/com/seancheey/data/Pond.java[m
[36m@@ -6,8 +6,6 @@[m [mimport java.io.Serializable;[m
 import java.util.ArrayList;[m
 import java.util.Iterator;[m
 [m
[31m-import com.seancheey.data.entity.Fish;[m
[31m-[m
 public class Pond implements Serializable {[m
 	/**[m
 	 * [m
[1mdiff --git a/src/com/seancheey/data/entity/Fish.java b/src/com/seancheey/data/entity/Fish.java[m
[1mdeleted file mode 100644[m
[1mindex 3fe44b1..0000000[m
[1m--- a/src/com/seancheey/data/entity/Fish.java[m
[1m+++ /dev/null[m
[36m@@ -1,204 +0,0 @@[m
[31m-package com.seancheey.data.entity;[m
[31m-[m
[31m-import java.awt.Graphics;[m
[31m-import java.awt.Graphics2D;[m
[31m-import java.awt.Image;[m
[31m-import java.io.Serializable;[m
[31m-[m
[31m-import com.seancheey.data.Entity;[m
[31m-import com.seancheey.data.FishGenerator;[m
[31m-import com.seancheey.data.Pond;[m
[31m-[m
[31m-public abstract class Fish extends Entity implements Serializable {[m
[31m-	/**[m
[31m-	 * [m
[31m-	 */[m
[31m-	private static final long serialVersionUID = 2L;[m
[31m-	protected final Pond pond;// the container of fish[m
[31m-	protected transient Image image;// the image of the fish[m
[31m-	protected boolean immobilized = false;// if the fish is fixed[m
[31m-	private double energyUsed, shearY;[m
[31m-	private final double matureWidth, matureHeight;[m
[31m-[m
[31m-	// constructor[m
[31m-	public Fish(double width, double height, double x, double y, double vx,[m
[31m-			double vy, Pond pond, Image image, double matureWidth,[m
[31m-			double matureHeight) {[m
[31m-		super();[m
[31m-		this.width = width;[m
[31m-		this.height = height;[m
[31m-		this.x = x;[m
[31m-		this.y = y;[m
[31m-		this.vx = vx;[m
[31m-		this.vy = vy;[m
[31m-		this.pond = pond;[m
[31m-		this.image = image;[m
[31m-		this.matureWidth = matureHeight;[m
[31m-		this.matureHeight = matureHeight;[m
[31m-	}[m
[31m-[m
[31m-	public Fish(double width, double height, double x, double y, double vx,[m
[31m-			double vy, Pond pond, Image image) {[m
[31m-		super();[m
[31m-		this.width = width;[m
[31m-		this.height = height;[m
[31m-		this.x = x;[m
[31m-		this.y = y;[m
[31m-		this.vx = vx;[m
[31m-		this.vy = vy;[m
[31m-		this.pond = pond;[m
[31m-		this.image = image;[m
[31m-		this.matureWidth = 150;[m
[31m-		this.matureHeight = 75;[m
[31m-	}[m
[31m-[m
[31m-	public void setFixed(boolean value) {[m
[31m-		immobilized = value;[m
[31m-	}[m
[31m-[m
[31m-	@Override[m
[31m-	public String toString() {[m
[31m-		return "Fish [width=" + width + ", height=" + height + ", x=" + x[m
[31m-				+ ", y=" + y + ", vx=" + vx + ", vy=" + vy + "]";[m
[31m-	}[m
[31m-[m
[31m-	// List of getter[m
[31m-[m
[31m-	public Pond getPond() {[m
[31m-		return pond;[m
[31m-	}[m
[31m-[m
[31m-	// ***Main Algorithm is here!!!***[m
[31m-	public void perform() {[m
[31m-		// grow a bit or die if mature[m
[31m-		if (width < matureWidth)[m
[31m-			width += Math.random() / 10;[m
[31m-		else if (Math.random() < 0.01)[m
[31m-			getPond().remove(this);[m
[31m-		if (height < matureHeight)[m
[31m-			height += Math.random() / 20;[m
[31m-		else if (Math.random() < 0.01)[m
[31m-			getPond().remove(this);[m
[31m-		// to prevent the ball from sticking into wall[m
[31m-		if (x > getPond().getWidth()) {[m
[31m-			x = getPond().getWidth() - width;[m
[31m-			vx = -vx;[m
[31m-		}[m
[31m-		if (y > getPond().getHeight()) {[m
[31m-			y = getPond().getHeight() - height;[m
[31m-			vy = -vy;[m
[31m-		}[m
[31m-		if (x < 0) {[m
[31m-			x = width;[m
[31m-			vx = -vx;[m
[31m-		}[m
[31m-		if (y < 0) {[m
[31m-			y = height;[m
[31m-			vy = -vy;[m
[31m-		}[m
[31m-		// have a move[m
[31m-		if (!immobilized) {[m
[31m-			x += vx;[m
[31m-			y += vy;[m
[31m-		}[m
[31m-		// calculate the energy use[m
[31m-		energyUsed += getVelocity() / 15;[m
[31m-		// calculate the shear[m
[31m-		shearY = Math.sin(energyUsed) * 0.25;[m
[31m-[m
[31m-		// propagate in a small probability[m
[31m-		if (width > matureWidth * 0.75 && height > matureHeight * 0.75)[m
[31m-			for (Fish f : pond.getFishes()) {[m
[31m-				if (isCollidedBy(f)) {[m
[31m-					if (Math.random() < 0.001)[m
[31m-						propagate();[m
[31m-					break;[m
[31m-				}[m
[31m-			}[m
[31m-	}[m
[31m-[m
[31m-	public void trackOnce(Fish fish) {[m
[31m-		// use mean angle[m
[31m-		double diffx = fish.getX() - x, diffy = fish.getY() - y;[m
[31m-		double vangle = Math.atan2(vy, vx), aimangle = Math.atan2(diffy, diffx);[m
[31m-		if (Math.abs(vangle - aimangle) > Math.PI) {[m
[31m-			vangle = (vangle + aimangle) / 2 + Math.PI;[m
[31m-		} else {[m
[31m-			vangle = (vangle + aimangle) / 2;[m
[31m-		}[m
[31m-		// use mean velocity if not fixed[m
[31m-		double v = getVelocity();[m
[31m-		if (immobilized == false) {[m
[31m-			double diffv = fish.getVelocity();[m
[31m-			v = (v + diffv) / 2;[m
[31m-			// set vx and vy[m
[31m-			vx = Math.cos(vangle) * v;[m
[31m-			vy = Math.sin(vangle) * v;[m
[31m-		}[m
[31m-	}[m
[31m-[m
[31m-	public void trackOnce(double px, double py) {[m
[31m-		// use mean angle[m
[31m-		double diffx = px - x, diffy = py - y;[m
[31m-		double vangle = Math.atan2(vy, vx), aimangle = Math.atan2(diffy, diffx);[m
[31m-		double diffangle = Math.abs(vangle - aimangle);[m
[31m-		if (diffangle > Math.PI) {[m
[31m-			vangle = (vangle + aimangle) / 2 + Math.PI;[m
[31m-		} else {[m
[31m-			vangle = (vangle + aimangle) / 2;[m
[31m-		}[m
[31m-		// set vx and vy[m
[31m-		vx = Math.cos(vangle) * getVelocity();[m
[31m-		vy = Math.sin(vangle) * getVelocity();[m
[31m-	}[m
[31m-[m
[31m-	public boolean isCollidedBy(Fish fish) {[m
[31m-		if ((Math.abs(fish.getXCenter() - getXCenter()) <= (fish.getWidth() + width) / 2.0)[m
[31m-				&& (Math.abs(fish.getYCenter() - getYCenter()) <= (fish[m
[31m-						.getHeight() + height) / 2.0)) {[m
[31m-			return true;[m
[31m-		}[m
[31m-		return false;[m
[31m-	}[m
[31m-[m
[31m-	public void propagate() {[m
[31m-		Fish fish = clone();[m
[31m-		fish.setWidth(20);[m
[31m-		fish.setHeight(10);[m
[31m-		fish.setVx(FishGenerator.randV(5));[m
[31m-		fish.setVy(FishGenerator.randV(5));[m
[31m-		pond.add(fish);[m
[31m-	}[m
[31m-[m
[31m-	public void paint(Graphics g) {[m
[31m-		int xcenter = (int) getXCenter();[m
[31m-		int ycenter = (int) getYCenter();[m
[31m-		g.translate(xcenter, ycenter);[m
[31m-		Graphics2D g2 = (Graphics2D) g;[m
[31m-		double angle = Math.atan2(vy, vx);[m
[31m-		g2.shear(0, shearY);[m
[31m-		g2.rotate(angle);[m
[31m-		drawShape(g);[m
[31m-		g2.rotate(-angle);[m
[31m-		g2.shear(0, -shearY);[m
[31m-		g.translate(-xcenter, -ycenter);[m
[31m-	}[m
[31m-[m
[31m-	protected void drawShape(Graphics g) {[m
[31m-		if (image == null)[m
[31m-			image = fetchLostImage();[m
[31m-		g.drawImage(image, (int) (-width / 2), (int) (-height / 2),[m
[31m-				(int) (width), (int) (height), null);[m
[31m-	}[m
[31m-[m
[31m-	protected abstract Image fetchLostImage();[m
[31m-[m
[31m-	/*[m
[31m-	 * (non-Javadoc)[m
[31m-	 * [m
[31m-	 * @see java.lang.Object#clone()[m
[31m-	 */[m
[31m-	@Override[m
[31m-	protected abstract Fish clone();[m
[31m-[m
[31m-}[m
[1mdiff --git a/src/com/seancheey/data/entity/fish/MaoFish.java b/src/com/seancheey/data/entity/fish/MaoFish.java[m
[1mdeleted file mode 100644[m
[1mindex 82f6a38..0000000[m
[1m--- a/src/com/seancheey/data/entity/fish/MaoFish.java[m
[1m+++ /dev/null[m
[36m@@ -1,45 +0,0 @@[m
[31m-package com.seancheey.data.entity.fish;[m
[31m-[m
[31m-import java.awt.Image;[m
[31m-[m
[31m-import com.seancheey.data.ImagePond;[m
[31m-import com.seancheey.data.Pond;[m
[31m-import com.seancheey.data.entity.Fish;[m
[31m-[m
[31m-public class MaoFish extends Fish {[m
[31m-[m
[31m-	/**[m
[31m-	 * [m
[31m-	 */[m
[31m-	private static final long serialVersionUID = 1L;[m
[31m-	private int timeLeft = 20;[m
[31m-	private Fish aim;[m
[31m-[m
[31m-	public MaoFish(double width, double height, double x, double y, double vx,[m
[31m-			double vy, Pond pond) {[m
[31m-		super(width, height, x, y, vx, vy, pond, ImagePond.get("fish - cat"));[m
[31m-	}[m
[31m-[m
[31m-	@Override[m
[31m-	public void perform() {[m
[31m-		super.perform();[m
[31m-		// set new action after finish all action[m
[31m-		if (timeLeft <= 0 || aim == null) {[m
[31m-			timeLeft = (int) (Math.random() * 30);[m
[31m-			aim = getPond().getRandomFish();[m
[31m-		}[m
[31m-		trackOnce(aim);[m
[31m-		timeLeft--;[m
[31m-	}[m
[31m-[m
[31m-	@Override[m
[31m-	protected Fish clone() {[m
[31m-		return new MaoFish(width, height, x, y, vx, vy, pond);[m
[31m-	}[m
[31m-[m
[31m-	@Override[m
[31m-	protected Image fetchLostImage() {[m
[31m-		return ImagePond.get("fish - cat");[m
[31m-	}[m
[31m-[m
[31m-}[m
[1mdiff --git a/src/com/seancheey/data/entity/fish/RainbowFish.java b/src/com/seancheey/data/entity/fish/RainbowFish.java[m
[1mdeleted file mode 100644[m
[1mindex c6c3865..0000000[m
[1m--- a/src/com/seancheey/data/entity/fish/RainbowFish.java[m
[1m+++ /dev/null[m
[36m@@ -1,51 +0,0 @@[m
[31m-package com.seancheey.data.entity.fish;[m
[31m-[m
[31m-import java.awt.Image;[m
[31m-[m
[31m-import com.seancheey.data.ImagePond;[m
[31m-import com.seancheey.data.Pond;[m
[31m-import com.seancheey.data.entity.Fish;[m
[31m-[m
[31m-public class RainbowFish extends Fish {[m
[31m-[m
[31m-	/**[m
[31m-	 * [m
[31m-	 */[m
[31m-	private static final long serialVersionUID = 1L;[m
[31m-	private transient Fish aim;[m
[31m-[m
[31m-	public RainbowFish(double width, double height, double x, double y,[m
[31m-			double vx, double vy, Pond pond) {[m
[31m-		super(width, height, x, y, vx, vy, pond, ImagePond[m
[31m-				.get("fish - brownfish1"));[m
[31m-	}[m
[31m-[m
[31m-	/*[m
[31m-	 * (non-Javadoc)[m
[31m-	 * [m
[31m-	 * @see com.seancheey.data.Fish#perform()[m
[31m-	 */[m
[31m-	@Override[m
[31m-	public void perform() {[m
[31m-		super.perform();[m
[31m-		// search for other fishes[m
[31m-		if (aim == null) {[m
[31m-			aim = getPond().getRandomFish();[m
[31m-		}[m
[31m-		if (isCollidedBy(aim)) {[m
[31m-			// collision becomes meaningless[m
[31m-			aim = null;[m
[31m-		} else[m
[31m-			trackOnce(aim);[m
[31m-	}[m
[31m-[m
[31m-	@Override[m
[31m-	protected Fish clone() {[m
[31m-		return new RainbowFish(width, height, x, y, vx, vy, pond);[m
[31m-	}[m
[31m-[m
[31m-	@Override[m
[31m-	protected Image fetchLostImage() {[m
[31m-		return ImagePond.get("fish - cat");[m
[31m-	}[m
[31m-}[m
[1mdiff --git a/src/com/seancheey/data/entity/fish/RectFish.java b/src/com/seancheey/data/entity/fish/RectFish.java[m
[1mdeleted file mode 100644[m
[1mindex 81d5f3c..0000000[m
[1m--- a/src/com/seancheey/data/entity/fish/RectFish.java[m
[1m+++ /dev/null[m
[36m@@ -1,47 +0,0 @@[m
[31m-package com.seancheey.data.entity.fish;[m
[31m-[m
[31m-import java.awt.Image;[m
[31m-[m
[31m-import com.seancheey.data.ImagePond;[m
[31m-import com.seancheey.data.Pond;[m
[31m-import com.seancheey.data.entity.Fish;[m
[31m-[m
[31m-public class RectFish extends Fish {[m
[31m-[m
[31m-	/**[m
[31m-	 * [m
[31m-	 */[m
[31m-	private static final long serialVersionUID = 1L;[m
[31m-[m
[31m-	public RectFish(double width, double height, double x, double y, double vx,[m
[31m-			double vy, Pond pond) {[m
[31m-		super(width, height, x, y, vx, vy, pond, ImagePond[m
[31m-				.get("fish - redfish"));[m
[31m-	}[m
[31m-[m
[31m-	@Override[m
[31m-	public void perform() {[m
[31m-		super.perform();[m
[31m-		// pick a random fish[m
[31m-		Fish randFish = pond.getFishes().get([m
[31m-				Math.abs((int) x % pond.getFishes().size()));[m
[31m-		// close to it[m
[31m-		if (immobilized == false) {[m
[31m-			vx += (randFish.getX() - x) / 1000;[m
[31m-			vy += (randFish.getY() - y) / 1000;[m
[31m-		} else {[m
[31m-			trackOnce(randFish);[m
[31m-		}[m
[31m-	}[m
[31m-[m
[31m-	@Override[m
[31m-	protected Fish clone() {[m
[31m-		return new RectFish(width, height, x, y, vx, vy, pond);[m
[31m-	}[m
[31m-[m
[31m-	@Override[m
[31m-	protected Image fetchLostImage() {[m
[31m-		return ImagePond.get("fish - redfish");[m
[31m-	}[m
[31m-[m
[31m-}[m
[1mdiff --git a/src/com/seancheey/data/entity/fish/RoundFish.java b/src/com/seancheey/data/entity/fish/RoundFish.java[m
[1mdeleted file mode 100644[m
[1mindex 07904ba..0000000[m
[1m--- a/src/com/seancheey/data/entity/fish/RoundFish.java[m
[1m+++ /dev/null[m
[36m@@ -1,48 +0,0 @@[m
[31m-package com.seancheey.data.entity.fish;[m
[31m-[m
[31m-import java.awt.Image;[m
[31m-[m
[31m-import com.seancheey.data.ImagePond;[m
[31m-import com.seancheey.data.Pond;[m
[31m-import com.seancheey.data.entity.Fish;[m
[31m-[m
[31m-public class RoundFish extends Fish {[m
[31m-[m
[31m-	/**[m
[31m-	 * [m
[31m-	 */[m
[31m-	private static final long serialVersionUID = 1L;[m
[31m-[m
[31m-	public RoundFish(double width, double height, double x, double y,[m
[31m-			double vx, double vy, Pond pond) {[m
[31m-		super(width, height, x, y, vx, vy, pond, ImagePond[m
[31m-				.get("fish - bluefish"));[m
[31m-	}[m
[31m-[m
[31m-	@Override[m
[31m-	public void perform() {[m
[31m-		super.perform();[m
[31m-		// pick the next fish[m
[31m-		Fish nextFish;[m
[31m-		int i = 0;[m
[31m-		for (Fish fish : getPond().getFishes()) {[m
[31m-			if (fish.equals(this))[m
[31m-				break;[m
[31m-			i++;[m
[31m-		}[m
[31m-		nextFish = getPond().getFishes().get([m
[31m-				i + 1 >= getPond().getFishes().size() ? 0 : i + 1);[m
[31m-		// close to it[m
[31m-		trackOnce(nextFish);[m
[31m-	}[m
[31m-[m
[31m-	@Override[m
[31m-	protected Fish clone() {[m
[31m-		return new RoundFish(width, height, x, y, vx, vy, pond);[m
[31m-	}[m
[31m-[m
[31m-	@Override[m
[31m-	protected Image fetchLostImage() {[m
[31m-		return ImagePond.get("fish - bluefish");[m
[31m-	}[m
[31m-}[m
[1mdiff --git a/src/com/seancheey/data/fish/MaoFish.java b/src/com/seancheey/data/fish/MaoFish.java[m
[1mnew file mode 100644[m
[1mindex 0000000..046499e[m
[1m--- /dev/null[m
[1m+++ b/src/com/seancheey/data/fish/MaoFish.java[m
[36m@@ -0,0 +1,45 @@[m
[32m+[m[32mpackage com.seancheey.data.fish;[m
[32m+[m
[32m+[m[32mimport java.awt.Image;[m
[32m+[m
[32m+[m[32mimport com.seancheey.data.Fish;[m
[32m+[m[32mimport com.seancheey.data.ImagePond;[m
[32m+[m[32mimport com.seancheey.data.Pond;[m
[32m+[m
[32m+[m[32mpublic class MaoFish extends Fish {[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m *[m[41m [m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static final long serialVersionUID = 1L;[m
[32m+[m	[32mprivate int timeLeft = 20;[m
[32m+[m	[32mprivate Fish aim;[m
[32m+[m
[32m+[m	[32mpublic MaoFish(double width, double height, double x, double y, double vx,[m
[32m+[m			[32mdouble vy, Pond pond) {[m
[32m+[m		[32msuper(width, height, x, y, vx, vy, pond, ImagePond.get("fish - cat"));[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected void perform() {[m
[32m+[m		[32msuper.perform();[m
[32m+[m		[32m// set new action after finish all action[m
[32m+[m		[32mif (timeLeft <= 0 || aim == null) {[m
[32m+[m			[32mtimeLeft = (int) (Math.random() * 30);[m
[32m+[m			[32maim = getPond().getRandomFish();[m
[32m+[m		[32m}[m
[32m+[m		[32mtrackOnce(aim);[m
[32m+[m		[32mtimeLeft--;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected Fish clone() {[m
[32m+[m		[32mreturn new MaoFish(width, height, x, y, vx, vy, pond);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected Image fetchLostImage() {[m
[32m+[m		[32mreturn ImagePond.get("fish - cat");[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/src/com/seancheey/data/fish/RainbowFish.java b/src/com/seancheey/data/fish/RainbowFish.java[m
[1mnew file mode 100644[m
[1mindex 0000000..3ad13b7[m
[1m--- /dev/null[m
[1m+++ b/src/com/seancheey/data/fish/RainbowFish.java[m
[36m@@ -0,0 +1,51 @@[m
[32m+[m[32mpackage com.seancheey.data.fish;[m
[32m+[m
[32m+[m[32mimport java.awt.Image;[m
[32m+[m
[32m+[m[32mimport com.seancheey.data.Fish;[m
[32m+[m[32mimport com.seancheey.data.ImagePond;[m
[32m+[m[32mimport com.seancheey.data.Pond;[m
[32m+[m
[32m+[m[32mpublic class RainbowFish extends Fish {[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m *[m[41m [m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static final long serialVersionUID = 1L;[m
[32m+[m	[32mprivate transient Fish aim;[m
[32m+[m
[32m+[m	[32mpublic RainbowFish(double width, double height, double x, double y,[m
[32m+[m			[32mdouble vx, double vy, Pond pond) {[m
[32m+[m		[32msuper(width, height, x, y, vx, vy, pond, ImagePond[m
[32m+[m				[32m.get("fish - brownfish1"));[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m/*[m
[32m+[m	[32m * (non-Javadoc)[m
[32m+[m	[32m *[m[41m [m
[32m+[m	[32m * @see com.seancheey.data.Fish#perform()[m
[32m+[m	[32m */[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected void perform() {[m
[32m+[m		[32msuper.perform();[m
[32m+[m		[32m// search for other fishes[m
[32m+[m		[32mif (aim == null) {[m
[32m+[m			[32maim = getPond().getRandomFish();[m
[32m+[m		[32m}[m
[32m+[m		[32mif (isCollidedBy(aim)) {[m
[32m+[m			[32m// collision becomes meaningless[m
[32m+[m			[32maim = null;[m
[32m+[m		[32m} else[m
[32m+[m			[32mtrackOnce(aim);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected Fish clone() {[m
[32m+[m		[32mreturn new RainbowFish(width, height, x, y, vx, vy, pond);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected Image fetchLostImage() {[m
[32m+[m		[32mreturn ImagePond.get("fish - cat");[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[1mdiff --git a/src/com/seancheey/data/fish/RectFish.java b/src/com/seancheey/data/fish/RectFish.java[m
[1mnew file mode 100644[m
[1mindex 0000000..d060a1b[m
[1m--- /dev/null[m
[1m+++ b/src/com/seancheey/data/fish/RectFish.java[m
[36m@@ -0,0 +1,47 @@[m
[32m+[m[32mpackage com.seancheey.data.fish;[m
[32m+[m
[32m+[m[32mimport java.awt.Image;[m
[32m+[m
[32m+[m[32mimport com.seancheey.data.Fish;[m
[32m+[m[32mimport com.seancheey.data.ImagePond;[m
[32m+[m[32mimport com.seancheey.data.Pond;[m
[32m+[m
[32m+[m[32mpublic class RectFish extends Fish {[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m *[m[41m [m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static final long serialVersionUID = 1L;[m
[32m+[m
[32m+[m	[32mpublic RectFish(double width, double height, double x, double y, double vx,[m
[32m+[m			[32mdouble vy, Pond pond) {[m
[32m+[m		[32msuper(width, height, x, y, vx, vy, pond, ImagePond[m
[32m+[m				[32m.get("fish - redfish"));[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected void perform() {[m
[32m+[m		[32msuper.perform();[m
[32m+[m		[32m// pick a random fish[m
[32m+[m		[32mFish randFish = pond.getFishes().get([m
[32m+[m				[32mMath.abs((int) x % pond.getFishes().size()));[m
[32m+[m		[32m// close to it[m
[32m+[m		[32mif (immobilized == false) {[m
[32m+[m			[32mvx += (randFish.getX() - x) / 1000;[m
[32m+[m			[32mvy += (randFish.getY() - y) / 1000;[m
[32m+[m		[32m} else {[m
[32m+[m			[32mtrackOnce(randFish);[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected Fish clone() {[m
[32m+[m		[32mreturn new RectFish(width, height, x, y, vx, vy, pond);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected Image fetchLostImage() {[m
[32m+[m		[32mreturn ImagePond.get("fish - redfish");[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/src/com/seancheey/data/fish/RoundFish.java b/src/com/seancheey/data/fish/RoundFish.java[m
[1mnew file mode 100644[m
[1mindex 0000000..244e27b[m
[1m--- /dev/null[m
[1m+++ b/src/com/seancheey/data/fish/RoundFish.java[m
[36m@@ -0,0 +1,48 @@[m
[32m+[m[32mpackage com.seancheey.data.fish;[m
[32m+[m
[32m+[m[32mimport java.awt.Image;[m
[32m+[m
[32m+[m[32mimport com.seancheey.data.Fish;[m
[32m+[m[32mimport com.seancheey.data.ImagePond;[m
[32m+[m[32mimport com.seancheey.data.Pond;[m
[32m+[m
[32m+[m[32mpublic class RoundFish extends Fish {[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m *[m[41m [m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static final long serialVersionUID = 1L;[m
[32m+[m
[32m+[m	[32mpublic RoundFish(double width, double height, double x, double y, double vx,[m
[32m+[m			[32mdouble vy, Pond pond) {[m
[32m+[m		[32msuper(width, height, x, y, vx, vy, pond, ImagePond[m
[32m+[m				[32m.get("fish - bluefish"));[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected void perform() {[m
[32m+[m		[32msuper.perform();[m
[32m+[m		[32m// pick the next fish[m
[32m+[m		[32mFish nextFish;[m
[32m+[m		[32mint i = 0;[m
[32m+[m		[32mfor (Fish fish : getPond().getFishes()) {[m
[32m+[m			[32mif (fish.equals(this))[m
[32m+[m				[32mbreak;[m
[32m+[m			[32mi++;[m
[32m+[m		[32m}[m
[32m+[m		[32mnextFish = getPond().getFishes().get([m
[32m+[m				[32mi + 1 >= getPond().getFishes().size() ? 0 : i + 1);[m
[32m+[m		[32m// close to it[m
[32m+[m		[32mtrackOnce(nextFish);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected Fish clone() {[m
[32m+[m		[32mreturn new RoundFish(width, height, x, y, vx, vy, pond);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected Image fetchLostImage() {[m
[32m+[m		[32mreturn ImagePond.get("fish - bluefish");[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[1mdiff --git a/src/com/seancheey/data/map/World.java b/src/com/seancheey/data/map/World.java[m
[1mnew file mode 100644[m
[1mindex 0000000..de42dc3[m
[1m--- /dev/null[m
[1m+++ b/src/com/seancheey/data/map/World.java[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32mpackage com.seancheey.data.map;[m
[32m+[m
[32m+[m[32mimport java.awt.Image;[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m
[32m+[m[32mimport com.seancheey.data.LocationComponent;[m
[32m+[m[32mimport com.seancheey.data.Map;[m
[32m+[m
[32m+[m[32mpublic class World extends Map {[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m *[m[41m [m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static final long serialVersionUID = 1L;[m
[32m+[m
[32m+[m	[32mpublic World(Image background, ArrayList<LocationComponent> locations) {[m
[32m+[m		[32msuper(background, locations);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/src/com/seancheey/gui/gamePanel/FishMouseListener.java b/src/com/seancheey/gui/gamePanel/FishMouseListener.java[m
[1mdeleted file mode 100644[m
[1mindex daf7bc9..0000000[m
[1m--- a/src/com/seancheey/gui/gamePanel/FishMouseListener.java[m
[1m+++ /dev/null[m
[36m@@ -1,72 +0,0 @@[m
[31m-package com.seancheey.gui.gamePanel;[m
[31m-[m
[31m-import java.awt.event.MouseEvent;[m
[31m-import java.awt.event.MouseListener;[m
[31m-import java.awt.event.MouseMotionListener;[m
[31m-[m
[31m-import com.seancheey.data.FishGenerator;[m
[31m-import com.seancheey.data.Pond;[m
[31m-import com.seancheey.data.entity.Fish;[m
[31m-[m
[31m-public class FishMouseListener implements MouseListener, MouseMotionListener {[m
[31m-	private Fish draggedFish;[m
[31m-	private Pond pond;[m
[31m-[m
[31m-	public FishMouseListener(Pond pond) {[m
[31m-		super();[m
[31m-		this.pond = pond;[m
[31m-	}[m
[31m-[m
[31m-	@Override[m
[31m-	public void mouseEntered(MouseEvent e) {[m
[31m-[m
[31m-	}[m
[31m-[m
[31m-	@Override[m
[31m-	public void mouseExited(MouseEvent e) {[m
[31m-[m
[31m-	}[m
[31m-[m
[31m-	@Override[m
[31m-	public void mousePressed(MouseEvent e) {[m
[31m-		if (e.getButton() == MouseEvent.BUTTON1) {[m
[31m-			draggedFish = pond.getFishAt(e.getX(), e.getY());[m
[31m-			if (draggedFish != null)[m
[31m-				draggedFish.setFixed(true);[m
[31m-		}[m
[31m-	}[m
[31m-[m
[31m-	@Override[m
[31m-	public void mouseReleased(MouseEvent e) {[m
[31m-		if (e.getButton() == MouseEvent.BUTTON1) {[m
[31m-			if (draggedFish != null) {[m
[31m-				draggedFish.setFixed(false);[m
[31m-				draggedFish.setVx(0);[m
[31m-				draggedFish.setVy(0);[m
[31m-				draggedFish = null;[m
[31m-			}[m
[31m-		}[m
[31m-	}[m
[31m-[m
[31m-	@Override[m
[31m-	public void mouseDragged(MouseEvent e) {[m
[31m-		if (draggedFish != null) {[m
[31m-			draggedFish.setX(e.getX() - draggedFish.getWidth() / 2);[m
[31m-			draggedFish.setY(e.getY() - draggedFish.getHeight() / 2);[m
[31m-		}[m
[31m-	}[m
[31m-[m
[31m-	@Override[m
[31m-	public void mouseMoved(MouseEvent e) {[m
[31m-[m
[31m-	}[m
[31m-[m
[31m-	@Override[m
[31m-	public void mouseClicked(MouseEvent e) {[m
[31m-		if (e.getButton() == MouseEvent.BUTTON3)[m
[31m-			pond.getFishes().add([m
[31m-					new FishGenerator(pond).generateRandom(e.getX()[m
[31m-							- FishGenerator.DEFAULT_WIDTH / 2, e.getY()[m
[31m-							- FishGenerator.DEFAULT_HEIGHT / 2));[m
[31m-	}[m
[31m-}[m
[1mdiff --git a/src/com/seancheey/gui/gamePanel/GameMenuBar.java b/src/com/seancheey/gui/gamePanel/GameMenuBar.java[m
[1mindex 86302f0..6a52360 100644[m
[1m--- a/src/com/seancheey/gui/gamePanel/GameMenuBar.java[m
[1m+++ b/src/com/seancheey/gui/gamePanel/GameMenuBar.java[m
[36m@@ -18,9 +18,9 @@[m [mimport javax.swing.JMenuItem;[m
 import javax.swing.JPanel;[m
 [m
 import com.seancheey.Main;[m
[32m+[m[32mimport com.seancheey.data.Fish;[m
 import com.seancheey.data.FishGenerator;[m
 import com.seancheey.data.Pond;[m
[31m-import com.seancheey.data.entity.Fish;[m
 import com.seancheey.gui.CreditPanel;[m
 import com.seancheey.gui.FishSelectPanel;[m
 import com.seancheey.gui.GamePanel;[m
[1mdiff --git a/src/com/seancheey/gui/gamePanel/PondPanel.java b/src/com/seancheey/gui/gamePanel/PondPanel.java[m
[1mindex 0bd6910..19e836d 100644[m
[1m--- a/src/com/seancheey/gui/gamePanel/PondPanel.java[m
[1m+++ b/src/com/seancheey/gui/gamePanel/PondPanel.java[m
[36m@@ -5,14 +5,20 @@[m [mimport java.awt.Graphics;[m
 import java.awt.Image;[m
 import java.awt.event.ActionEvent;[m
 import java.awt.event.ActionListener;[m
[32m+[m[32mimport java.awt.event.MouseEvent;[m
[32m+[m[32mimport java.awt.event.MouseListener;[m
[32m+[m[32mimport java.awt.event.MouseMotionListener;[m
 [m
 import javax.swing.JPanel;[m
 import javax.swing.Timer;[m
 [m
[32m+[m[32mimport com.seancheey.data.Fish;[m
[32m+[m[32mimport com.seancheey.data.FishGenerator;[m
 import com.seancheey.data.ImagePond;[m
 import com.seancheey.data.Pond;[m
 [m
[31m-public class PondPanel extends JPanel implements ActionListener {[m
[32m+[m[32mpublic class PondPanel extends JPanel implements MouseListener,[m
[32m+[m		[32mMouseMotionListener, ActionListener {[m
 	/**[m
 	 * [m
 	 */[m
[36m@@ -23,6 +29,8 @@[m [mpublic class PondPanel extends JPanel implements ActionListener {[m
 	private Pond pond;[m
 	// the background image[m
 	private transient Image background = ImagePond.get("background - sea");[m
[32m+[m	[32m// the fish that is being dragging[m
[32m+[m	[32mprivate Fish draggedFish = null;[m
 	// thread to operate fish's movement[m
 	private Timer timer = new Timer(delay, this);[m
 [m
[36m@@ -30,9 +38,8 @@[m [mpublic class PondPanel extends JPanel implements ActionListener {[m
 	public PondPanel(Pond pond) {[m
 		super();[m
 		this.pond = pond;[m
[31m-		FishMouseListener listener = new FishMouseListener(pond);[m
[31m-		addMouseListener(listener);[m
[31m-		addMouseMotionListener(listener);[m
[32m+[m		[32maddMouseListener(this);[m
[32m+[m		[32maddMouseMotionListener(this);[m
 		timer.start();[m
 	}[m
 [m
[36m@@ -73,11 +80,62 @@[m [mpublic class PondPanel extends JPanel implements ActionListener {[m
 	}[m
 [m
 	@Override[m
[32m+[m	[32mpublic void mouseClicked(MouseEvent e) {[m
[32m+[m		[32mif (e.getButton() == MouseEvent.BUTTON3)[m
[32m+[m			[32mpond.getFishes().add([m
[32m+[m					[32mnew FishGenerator(pond).generateRandom(e.getX(), e.getY()));[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
 	public void update(Graphics g) {[m
 		paint(g);[m
 	}[m
 [m
 	@Override[m
[32m+[m	[32mpublic void mouseEntered(MouseEvent e) {[m
[32m+[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic void mouseExited(MouseEvent e) {[m
[32m+[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic void mousePressed(MouseEvent e) {[m
[32m+[m		[32mif (e.getButton() == MouseEvent.BUTTON1) {[m
[32m+[m			[32mdraggedFish = pond.getFishAt(e.getX(), e.getY());[m
[32m+[m			[32mif (draggedFish != null)[m
[32m+[m				[32mdraggedFish.setFixed(true);[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic void mouseReleased(MouseEvent e) {[m
[32m+[m		[32mif (e.getButton() == MouseEvent.BUTTON1) {[m
[32m+[m			[32mif (draggedFish != null) {[m
[32m+[m				[32mdraggedFish.setFixed(false);[m
[32m+[m				[32mdraggedFish.setVx(0);[m
[32m+[m				[32mdraggedFish.setVy(0);[m
[32m+[m				[32mdraggedFish = null;[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic void mouseDragged(MouseEvent e) {[m
[32m+[m		[32mif (draggedFish != null) {[m
[32m+[m			[32mdraggedFish.setX(e.getX() - draggedFish.getWidth() / 2);[m
[32m+[m			[32mdraggedFish.setY(e.getY() - draggedFish.getHeight() / 2);[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic void mouseMoved(MouseEvent e) {[m
[32m+[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
 	public void actionPerformed(ActionEvent arg0) {[m
 		try {[m
 			pond.nextMove();[m
[1mdiff --git a/src/com/seancheey/gui/loadingPanel/LoadingComponent.java b/src/com/seancheey/gui/loadingPanel/LoadingComponent.java[m
[1mnew file mode 100644[m
[1mindex 0000000..2d9b2b8[m
[1m--- /dev/null[m
[1m+++ b/src/com/seancheey/gui/loadingPanel/LoadingComponent.java[m
[36m@@ -0,0 +1,51 @@[m
[32m+[m[32mpackage com.seancheey.gui.loadingPanel;[m
[32m+[m
[32m+[m[32mimport java.awt.Color;[m
[32m+[m[32mimport java.awt.Dimension;[m
[32m+[m[32mimport java.awt.Graphics;[m
[32m+[m
[32m+[m[32mimport javax.swing.JComponent;[m
[32m+[m
[32m+[m[32mpublic class LoadingComponent extends JComponent {[m
[32m+[m
[32m+[m	[32m/**[m
[32m+[m	[32m *[m[41m [m
[32m+[m	[32m */[m
[32m+[m	[32mprivate static final long serialVersionUID = 1L;[m
[32m+[m
[32m+[m	[32mprivate double mainProgress, subProgress;[m
[32m+[m	[32mprivate Color mainColor, subColor;[m
[32m+[m	[32mprivate int width, height;[m
[32m+[m	[32mprivate int painInterval = 10;[m
[32m+[m
[32m+[m	[32mpublic LoadingComponent(Color mainColor, Color subColor, int width,[m
[32m+[m			[32mint height) {[m
[32m+[m		[32msuper();[m
[32m+[m		[32mthis.mainColor = mainColor;[m
[32m+[m		[32mthis.subColor = subColor;[m
[32m+[m		[32mthis.width = width;[m
[32m+[m		[32mthis.height = height;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic Dimension getPreferredSize() {[m
[32m+[m		[32mreturn new Dimension(width, height);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mprotected void paintComponent(Graphics g) {[m
[32m+[m		[32msuper.paintComponent(g);[m
[32m+[m		[32mg.drawArc(0, 0, width, height, 0, (int) (360 * mainProgress));[m
[32m+[m		[32mg.drawArc(0, 0, width, height, 0, (int) (360 * subProgress));[m
[32m+[m		[32mtry {[m
[32m+[m			[32mThread.sleep(1);[m
[32m+[m		[32m} catch (InterruptedException e) {[m
[32m+[m			[32me.printStackTrace();[m
[32m+[m		[32m}[m
[32m+[m		[32mrepaint();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void resetLoadingComponent(double mainProgress) {[m
[32m+[m		[32mthis.mainProgress = mainProgress;[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
